@model site.Models.CLIENT_SALLE
@{
    ViewBag.Title = "salle";
    Layout = "~/Views/Shared/_SalleLayout1.cshtml";
}

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salles</title>
    <link rel="stylesheet" href=@Url.Content("/Content/ss/salle2.CSS")>


</head>


<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="style">
            <section>
                <form action="#">
                    <h2>Salles</h2><br>
                    <h4>Vos Cordonnées:</h4>



                    <label>CIN:</label>
                    @Html.EditorFor(model => model.CIN_CLIENT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CIN_CLIENT, "", new { @class = "text-danger" })
                    <label>NOM:</label>
                    @Html.EditorFor(model => model.NOM_Client, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NOM_Client, "", new { @class = "text-danger" })
                    <label>PRENOM:</label>
                    @Html.EditorFor(model => model.PRENOM_CLIENT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PRENOM_CLIENT, "", new { @class = "text-danger" })
                    <label>DATE DE NAISSANCE:</label>
                    @Html.EditorFor(model => model.DATE_NAISSANCE_CLIENT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DATE_NAISSANCE_CLIENT, "", new { @class = "text-danger" })
                    <label>ADRESSE:</label>
                    @Html.EditorFor(model => model.ADRESSE_CLIENT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ADRESSE_CLIENT, "", new { @class = "text-danger" })
                    <label>SEXE:</label>
                    @{
                        List<SelectListItem> item = new List<SelectListItem>();
                        item.Add(new SelectListItem { Text = "Homme", Value = "Homme" });
                        item.Add(new SelectListItem { Text = "Femme", Value = "Femme" });

                    }

                    @Html.DropDownListFor(model => model.SEXE_CLIENT, item, "Selectionner", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SEXE_CLIENT, "", new { @class = "text-danger" })
                    <label>TELEPHONNE:</label>
                    @Html.EditorFor(model => model.TELEPHONE_CLIENT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TELEPHONE_CLIENT, "", new { @class = "text-danger" })


                    <label>type:</label>
                    @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                    <label>dateDebut:</label>
                    @Html.EditorFor(model => model.dateDebut, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateDebut, "", new { @class = "text-danger" })
                    <label>dateFin:</label>
                    @Html.EditorFor(model => model.dateFin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dateFin, "", new { @class = "text-danger" })
                    <input type="submit" value="Envoyer" onclick=valider()>
                    <div id="y3"><input type="button" value="<< Retourne à l'Accueil" onclick="window.location.href='../index.html'"></div>
                </form>
            </section>
        </div>
        <script src="/Content/ss/JSEvenement.js"></script>
    }
    </body>